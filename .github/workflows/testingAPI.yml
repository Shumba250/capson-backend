name: testing
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: 
  push:
    branches:
      - main
  pull_request: 
    branches:
      - main
    
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.17.x]
    env: 
      DB : ${{secrets.DB }}
      cloud_name: ${{secrets.cloud_name}}
      api_key: ${{secrets.api_key}}
      api_secret: ${{secrets.api_secret}}
      jwtStrng: ${{secrets.jwtStrng}}
      PORT: ${{secrets.PORT}}
    steps:
      - uses: actions/checkout@v1
      - name: 'Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}'
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm test
      - run: npm run coverage
      
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Install NPM dependencies ðŸ“¦
        uses: bahmutov/npm-install@v1

      - name: Unit tests ðŸ§ª
        run: npm test

      - name: Check all covered files ðŸ“Š
        run: |
          node bin/check-coverage main1.js
          node bin/check-coverage to/main2.js
          node bin/only-covered main1.js main2.js
          # and can check multiple files at once
          node bin/check-coverage main1.js main2.js
      - name: Check totals ðŸ›¡
        run: node bin/check-total --min 30

      - name: Set commit status using REST
        # https://developer.github.com/v3/repos/statuses/
        run: |
          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
                "state": "success",
                "description": "REST commit status",
                "context": "a test"
              }'
      - name: Set code coverage commit status ðŸ“«
        run: node bin/set-gh-status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check coverage change from README ðŸ“«
        run: node bin/set-gh-status --check-against-readme
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update code coverage badge ðŸ¥‡
        run: node bin/update-badge

      - name: Semantic Release ðŸš€
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
